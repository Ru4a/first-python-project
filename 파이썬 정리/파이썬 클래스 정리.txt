클래스

함수를 정의하고 사용할 때 전역변수를 사용하면 계속해서 함수를 정의해야한다.
그 때의 번거로움을 없애기 위해서 클래스를 사용한다.
ex. class ____:

클래스 하나로 사용해서 만든 여러가지의 것들
이 것을 객체(Object)라고 부른다.

예를 들어 클래스는 과자의 틀로 비유할 수 있고, 객체는 과자라고 비유할 수 있다.
과자를 만들고 나서 부수거나 조각내도 틀이 바뀌지는 않는다.
이로써 객체는 서로에게 영향을 주지도 않는다.

클래스로 만든 객체는 인스턴스(instance)라고도 한다.
ex. a=Cookie() 이렇게 만든 객체는 a이다.
그리고 a객체는 Cookie의 인스턴스이다.
이로써 a는 Cookie의 인스턴스이다라는 말이 더 잘 어울린다.

클래스를 만들 때에는 클래스로 만든 객체를 중심으로 어떤 식으로 동작하게 할것인지 미리 구상한 뒤
생각한 것들을 하나씩 해결하며 완성하는 것이 좋다.

우선 대화형 인터프리터에서 pass란 문장만을 포함한 클래스를 만든다.
ex. class Fourcal:
	pass

이 다음 객체(ex. a=Fourcal())이라는 a 객체를 먼저 만든다.

이 다음에 객체에 숫자를 지정할 수 있게 해야한다.
(ex. a.setdata(4,2))

이 때 클래스 안에 구성된 함수는 메서드(Method)라고 한다.
ex. class Fourcal:
	def self.setdata(self, first, second): #메서드의 매개변수
		self.first = first	       #메서드의 수행문
		self.second = second     #메서드의 수행문

...
a=setdata(4,2) # 여기의 수는 아무거나 넣어도 된다.

일반적인 함수는
ex. def 함수명(매개변수):
	수행할 문장
이런식으로 구성되어 있다.
메서드(Method)도 클래스에 포함되어 있다는 점을 제외하면 같다.

일반 함수와 매서드(Method)의 차이는 매개변수에 있는데
메서드(Method)의 첫 번째 매개변수 self는 특별한 의미를 가진다.

메서드(Method)는
(ex. a.setdata(4,2))처럼 구성되어 있다.
하지만 클래스 내부의 매서드는 매개변수가 3개 필요한데
호출하면 왜 매개변수가 2개 일까
그 이유는 첫 번째 매개변수(ex. self)에는 자동적으로 메서드를 호출한
객체 a가 전달되기 때문이다.

보통 메서드를
a = setdata(4,2)같이 호출하지만
a =Fourcal()
FourCal.setdata(a,4,2)방식으로도 호출이 가능하다.




 

